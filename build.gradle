plugins {
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'com.moowork.node' version '1.2.0'
}

allprojects {
    apply plugin: 'maven'

    group = 'org.molgenis'
    version = '7.3.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.moowork.node'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    node {
        version = '8.12.0'
        npmVersion = '2.1.5'
        yarnVersion = '1.7.0'
        download = true
    }

    jar {
        from('build/dist') {
            include '**'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        // enable TestNG support (default is JUnit)
        useTestNG()

        exclude 'org/molgenis/**/**IT**'

        // set heap size for the test JVM(s)
        minHeapSize = "128m"
        maxHeapSize = "512m"

        // Fail the 'test' task on the first test failure
        failFast = true
    }

    task yarnInstall(type: YarnTask) {
        // Checks if package.json has been modified for efficiency purposes
        // The reference directory is node_modules
        inputs.file("${project.projectDir}/src/main/frontend/package.json")
        outputs.dir("${project.projectDir}/src/main/frontend/node_modules")

        // Determines working directory of subproject
        workingDir = file("${project.projectDir}/src/main/frontend")

        // Arguments for yarn to run (in this case "install")
        args = ['install', '--frozen-lockfile', '--mutex', 'network']
    }

    task yarnTest(type: YarnTask) {
        dependsOn yarnInstall
        workingDir = file("${project.projectDir}/src/main/frontend")

        args = ['test']
    }

    task yarnBuild(type: YarnTask) {
        dependsOn yarnInstall

        inputs.files(fileTree("${project.projectDir}/src/main/frontend"))
        outputs.dir("${project.buildDir}/dist")

        workingDir = file("${project.projectDir}/src/main/frontend")
        args = ['build', '--mutex', 'network']
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations.all {
        it.exclude group: 'commons-logging', module: 'commons-logging'
        it.exclude group: 'net.lingala.zip4j', module: 'zip4j'
        it.exclude group: 'org.apache.logging.log4j', module: 'log4j'
        it.exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
        it.exclude group: 'com.google.guava', module: 'guava-jdk5'
        it.exclude group: 'javax.xml.stream', module: 'stax-api'
        it.exclude group: 'stax', module: 'stax-api'
    }

    dependencyManagement {
        imports {
            mavenBom('io.spring.platform:platform-bom:Cairo-SR4') {
                bomProperty 'postgresql.version', '9.4.1211'
                bomProperty 'elasticsearch.version', '5.5.1'
                bomProperty 'testng.version', '6.8'
                bomProperty 'jsonpath.version', '2.4.0'
                bomProperty 'mockito.version', '2.7.22'
                bomProperty 'hamcrest-all.version', '1.3'
                bomProperty 'guava.version', '25.0-jre'
            }
        }
        dependencies {
            dependency('com.google.guava:guava:25.0-jre') {
                exclude 'com.google.errorprone:error_prone_annotations'
                exclude 'com.google.j2objc:j2objc-annotations'
                exclude 'org.codehaus.mojo:animal-sniffer-annotations'
                exclude 'org.checkerframework:checker-compat-qual'
            }
            dependency("com.github.ben-manes.caffeine:guava:2.6.2")
            dependency('com.google.auto.value:auto-value:1.4.1')
            dependency('com.google.code.findbugs:findbugs-annotations:3.0.1')
            dependency('org.elasticsearch.client:transport:5.5.1') {
                exclude 'commons-logging:commons-logging'
            }
            dependency('org.awaitility:awaitility:3.0.0')
            dependency('io.swagger:swagger-annotations:1.5.16')
            dependency('com.google.api-client:google-api-client:1.21.0') {
                exclude 'commons-logging:commons-logging'
                exclude 'com.google.guava:guava-jdk5'
            }
            dependency 'org.jboss.aerogear:aerogear-otp-java:1.0.0'
            dependency('com.amazonaws:aws-java-sdk-s3:1.11.86') {
                exclude 'commons-logging:commons-logging'
            }
            dependency('org.everit.json:org.everit.json.schema:1.5.1') {
                exclude 'commons-logging:commons-logging'
            }
            dependency('org.utgenome.thirdparty:picard:1.102.0') {
                exclude 'commons-logging:commons-logging'
            }
            dependency 'org.json:json:20141113'
            dependency('nl.systemsgenetics:Genotype-IO:1.0.3') {
                exclude 'org.mockito:mockito-all'
                exclude 'log4j:log4j'
                exclude 'commons-logging:commons-logging'
                exclude 'net.sf.trove4j:trove4j'
                exclude 'org.apache.commons:commons-cli'
                exclude 'com.kenai.nbpwr:edu-umd-cs-findbugs-annotations'
            }
            dependency 'com.icegreen:greenmail-webapp:1.5.5'
            dependency 'org.eclipse.rdf4j:rdf4j-rio-turtle:2.0.2'
            dependency 'no.api.freemarker:freemarker-java8:1.1.2'
            dependency 'cz.jirutka.rsql:rsql-parser:2.0.0'
            dependency 'eu.bitwalker:UserAgentUtils:1.17'
            dependency 'org.mapdb:mapdb:1.0.6'
            dependency 'cn.apiclub.tool:simplecaptcha:1.2.2'
            dependency 'net.lingala.zip4j:zip4j:1.3.2'
            dependency 'org.zeroturnaround:zt-zip:1.13'
            dependency 'com.github.jknack:handlebars:4.1.0'
            dependency('org.skyscreamer:jsonassert:1.5.0') {
                exclude 'com.vaadin.external.google:android-json'
            }
            dependency 'com.eaio.uuid:uuid:3.2'
            dependency 'com.mchange:c3p0:0.9.5.2'
            dependency 'net.sf.opencsv:opencsv:2.3'
            dependency('com.github.jmchilton.blend4j:blend4j:0.1.0') {
                exclude 'stax:stax-api'
            }
            dependency 'net.sourceforge.owlapi:owlapi-api:3.4.10'
            dependency 'net.sourceforge.owlapi:owlapi-apibinding:3.4.10'
            dependency 'com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.1'
            dependency 'org.jscience:jscience:4.3.1'
            dependency 'org.webjars:swagger-ui:3.2.2'

        }
    }

    dependencies {
        compile group: 'com.google.code.findbugs', name: 'jsr305'
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
        compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
        compile(group: 'com.google.guava', name: 'guava') {
            exclude(module: 'error_prone_annotations')
            exclude(module: 'j2objc-annotations')
            exclude(module: 'animal-sniffer-annotations')
            exclude(module: 'checker-compat-qual')
        }
    }
}
